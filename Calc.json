{
	"info": {
		"_postman_id": "54fa75e2-e569-4f1d-921e-1f42f294d6fa",
		"name": "Calculator_Data_Driven",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "BR1_Add2Numbers",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200 and is not 404. Also it includes AddResult & does not include SubtractResult\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"    pm.response.to.have.not.status(404)\r",
							"    pm.expect(pm.response.text()).to.include(\"AddResult\");\r",
							"    pm.expect(pm.response.text()).to.not.include(\"SubtractResult\");\r",
							"});\r",
							"let a = +pm.iterationData.get(\"numA\");\r",
							"console.log (a)\r",
							"let b = +pm.iterationData.get(\"numB\");\r",
							"console.log (b)\r",
							"let sum = a + b;\r",
							"console.log(sum)\r",
							"\r",
							"//Converting XML body to JSON object\r",
							"var jsonObject = xml2Json(responseBody);\r",
							"\r",
							"var rAddResult = +jsonObject['soap:Envelope']['soap:Body']['AddResponse']['AddResult'];\r",
							"console.log(rAddResult);\r",
							"\r",
							"if (sum === rAddResult) {\r",
							"    tests[\"Add result of \" + a + \" plus \" + b + \" is \" + sum] = true;\r",
							"}else{\r",
							"    tests[\"Add result of \" + a + \" plus \" + b + \" is \" + sum + \" but response is \" + rAddResult] = false\r",
							"}\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "text/xml",
						"type": "text"
					},
					{
						"key": "Accept-Charset",
						"value": "utf-8",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:tem=\"http://tempuri.org/\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <tem:Add>\r\n         <tem:intA>{{IntA}}</tem:intA>\r\n         <tem:intB>{{IntB}}</tem:intB>\r\n      </tem:Add>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>\r\n"
				},
				"url": {
					"raw": "{{URL}}",
					"host": [
						"{{URL}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "BR2_Subtract2Numbers",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200 and is not 404. Also it includes AddResult & does not include SubtractResult\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"    pm.response.to.have.not.status(404)\r",
							"    pm.expect(pm.response.text()).to.include(\"SubtractResult\");\r",
							"    pm.expect(pm.response.text()).to.not.include(\"AddResult\");\r",
							"});\r",
							"\r",
							"let a = +pm.iterationData.get(\"numA\");\r",
							"console.log (a)\r",
							"let b = +pm.iterationData.get(\"numB\");\r",
							"console.log (b)\r",
							"let sum = a - b;\r",
							"console.log(sum)\r",
							"\r",
							"//Converting XML body to JSON object\r",
							"var jsonObject = xml2Json(responseBody);\r",
							"\r",
							"var rSubtractResult = +jsonObject['soap:Envelope']['soap:Body']['SubtractResponse']['SubtractResult'];\r",
							"console.log(rSubtractResult);\r",
							"\r",
							"if (sum === rSubtractResult) {\r",
							"    tests[\"Subtraction result of \" + a + \" minus \" + b + \" is \" + sum + \". . This matches the expected result and therefore the test is a Pass.\"] = true;\r",
							"}else{\r",
							"    tests[\"Subtraction result of \" + a + \" minus \" + b + \" is \" + sum + \" but response is \" + rSubtractResult] = false\r",
							"}\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "text/xml",
						"type": "text"
					},
					{
						"key": "Accept-Charset",
						"value": "utf-8",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:tem=\"http://tempuri.org/\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <tem:Subtract>\r\n         <tem:intA>{{IntA}}</tem:intA>\r\n         <tem:intB>{{IntB}}</tem:intB>\r\n      </tem:Subtract>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>\r\n"
				},
				"url": {
					"raw": "{{URL}}",
					"host": [
						"{{URL}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "BR3_Divide2Numbers",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let a = pm.iterationData.get(\"numA\");\r",
							"let b = pm.iterationData.get(\"numB\");\r",
							"if (b == 0) {\r",
							"    pm.test(\"Status code is 500\", function () {\r",
							"        pm.response.to.have.status(500);\r",
							"    });\r",
							"\r",
							"} else {\r",
							"    pm.test(\"Status code is 200\", function () {\r",
							"        pm.response.to.have.status(200);\r",
							"    });\r",
							"    \r",
							"\r",
							"\r",
							"    pm.test(\"Status code is 200 & not 400.Also includes DivideResult and not AddResult\", function () {\r",
							"        pm.response.to.have.status(200);\r",
							"        pm.response.to.have.not.status(400);\r",
							"        pm.expect(pm.response.text()).to.include(\"DivideResult\");\r",
							"        pm.expect(pm.response.text()).to.not.include(\"AddResult\");\r",
							"    });\r",
							"\r",
							"\r",
							"    let div = Math.round(a / b);\r",
							"    console.log(div)\r",
							"    //div = Math.round(div, 2);\r",
							"    //console.log (sum)\r",
							"\r",
							"\r",
							"    //Converting XML body to JSON object\r",
							"    var jsonObject = xml2Json(responseBody);\r",
							"\r",
							"    var rDivideResult = +jsonObject['soap:Envelope']['soap:Body']['DivideResponse']['DivideResult'];\r",
							"    console.log(rDivideResult);\r",
							"\r",
							"    if ((div === rDivideResult) || (div === rDivideResult+1)) {\r",
							"        tests[\"Divident result of \" + a + \" Divided \" + b + \" is \" + div] = true;\r",
							"    }else{\r",
							"        tests[\"Divident result of \" + a + \" Divided \" + b + \" is \" + div + \" but response is \" + rDivideResult] = false\r",
							"    }\r",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "text/xml",
						"type": "text"
					},
					{
						"key": "Accept-Charset",
						"value": "utf-8",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:tem=\"http://tempuri.org/\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <tem:Divide>\r\n         <tem:intA>{{IntA}}</tem:intA>\r\n         <tem:intB>{{IntB}}</tem:intB>\r\n      </tem:Divide>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>\r\n"
				},
				"url": {
					"raw": "{{URL}}",
					"host": [
						"{{URL}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "BR4_Multiply2Numbers",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200 and not 400\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"    pm.response.to.have.not.status(400);\r",
							"});\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"MultiplyResult\");\r",
							"});\r",
							"\r",
							"let a = +pm.iterationData.get(\"numA\");\r",
							"console.log (a)\r",
							"let b = +pm.iterationData.get(\"numB\");\r",
							"console.log (b)\r",
							"let sum = a * b;\r",
							"console.log(sum)\r",
							"\r",
							"//Converting XML body to JSON object\r",
							"var jsonObject = xml2Json(responseBody);\r",
							"\r",
							"var rMultiplyResult = +jsonObject['soap:Envelope']['soap:Body']['MultiplyResponse']['MultiplyResult'];\r",
							"console.log(rMultiplyResult);\r",
							"\r",
							"if (sum === rMultiplyResult) {\r",
							"    tests[\"Product of \" + a + \" multiplied by  \" + b + \" is \" + sum + \". This matches the expected result and therefore the test is a Pass.\"] = true;\r",
							"}else{\r",
							"    tests[\"Product of \" + a + \" multiplied by \" + b + \" is \" + sum + \" but response is \" + rMultiplyResult] = false\r",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "text/xml",
						"type": "text"
					},
					{
						"key": "Accept-Charset",
						"value": "utf-8",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:tem=\"http://tempuri.org/\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <tem:Multiply>\r\n         <tem:intA>{{IntA}}</tem:intA>\r\n         <tem:intB>{{IntB}}</tem:intB>\r\n      </tem:Multiply>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>\r\n"
				},
				"url": {
					"raw": "{{URL}}",
					"host": [
						"{{URL}}"
					]
				}
			},
			"response": []
		}
	]
}